Algorithm: Go-Back-N Protocol (Client-Side)

	1.	Initialization:
	•	Create an array frames[] representing the frames to be sent (from 0 to TOTAL_FRAMES - 1).
	•	Initialize:
	•	base: The first frame that hasn’t been acknowledged.
	•	nextFrameToSend: The next frame ready for transmission.
	•	Create a UDP socket (sockfd) and configure the server’s address (serverAddr).
	2.	Frame Transmission Loop:
	•	While not all frames are acknowledged (base < TOTAL_FRAMES):
	1.	Send Frames in Window:
	•	Send frames from nextFrameToSend up to base + WINDOW_SIZE, as long as nextFrameToSend is within the total frame limit (TOTAL_FRAMES).
	2.	Wait for Acknowledgment (ACK):
	•	Use recvfrom() to receive an ACK from the server.
	•	If an ACK is received for frame ack:
	•	Move base to ack + 1 (indicating all frames up to ack are acknowledged).
	•	If a timeout or error occurs:
	•	Print a message indicating a resend is necessary.
	•	Reset nextFrameToSend to base (retransmit from the base frame).
	3.	Completion:
	•	Once all frames are acknowledged, print a success message.
	4.	Cleanup:
	•	Close the UDP socket.

Algorithm: Selective Repeat Protocol (Client-Side)

	1.	Initialize Client:
	•	Create a TCP socket (clientSocket).
	•	Connect to the server using the server’s IP and port (PORT).
	2.	Setup for Frame Transmission:
	•	Initialize tracking arrays:
	•	frameAck[]: Keeps track of which frames have been acknowledged (default: all 0).
	•	frameToSend: Points to the next frame that needs to be sent.
	•	framesSent: Counts the total number of frames successfully sent.
	3.	Transmit Frames:
	•	While not all frames are sent (framesSent < MAX_FRAMES):
	1.	Send Unacknowledged Frames in the Window:
	•	Iterate over the frames in the window, sending unacknowledged frames until the window limit (WINDOW_SIZE) is reached.
	2.	Wait for Acknowledgments:
	•	Use select() with a timeout (TIMEOUT_SEC) to wait for acknowledgments.
	•	If select() returns due to a timeout:
	•	Print a message and prepare to resend the frame.
	3.	Process Acknowledgment:
	•	If acknowledgment (ACK) is received:
	•	Extract the acknowledged frame number.
	•	Update frameAck[] for the received acknowledgment.
	•	Move frameToSend to the next unacknowledged frame if applicable.
	4.	Completion:
	•	Once all frames are successfully sent and acknowledged, print a success message.
	5.	Cleanup:
	•	Close the client socket.
