Client (Sender)
Initialize:

Set up a sliding window of frames (WINDOW_SIZE).
Track the next frame to send (frameToSend) and an array frameAck to mark acknowledged frames.
Sending Frames:

While there are frames left to send:
For each frame within the current window:
If the frame hasn’t been acknowledged, send it to the server.
Wait for acknowledgments from the server.
Receive Acknowledgments:

For each frame in the window:
Wait for acknowledgment with a timeout:
If acknowledgment is received:
Mark the frame as acknowledged.
If the lowest frame in the window is acknowledged, slide the window forward.
If timeout occurs (no acknowledgment), mark the frame for resending.
Repeat Steps 2–3 until all frames are acknowledged.

End:

Close the connection once all frames are acknowledged.


Server (Receiver)
Initialize:

Track received frames in an array (framesReceived) and set up a window to receive frames in order.
Receive Frames:

While there are frames left to receive:
Receive a frame from the client.
Simulate network issues by randomly "corrupting" frames (some frames are discarded).
If the frame is not corrupted:
Mark it as received.
Send an acknowledgment for the frame back to the client.
Check Completion:

If all frames are received and acknowledged:
Print a success message.
End:

Close the connection.



